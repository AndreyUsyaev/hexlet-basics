FROM ruby:3.2.1

ENV PROJECT_ROOT /opt/projects/hexlet-basics
WORKDIR ${PROJECT_ROOT}

ENV NODE_VERSION 19.x

RUN curl -sL https://deb.nodesource.com/setup_${NODE_VERSION} | bash -

RUN apt-get install -y nodejs

RUN curl -sS https://www.postgresql.org/media/keys/ACCC4CF8.asc | gpg --dearmor -o /etc/apt/trusted.gpg.d/postgresql.gpg
RUN echo \
  "deb [signed-by=/etc/apt/trusted.gpg.d/postgresql.gpg] https://apt.postgresql.org/pub/repos/apt \
  `. /etc/os-release && echo "$VERSION_CODENAME"`-pgdg main" | \
  tee /etc/apt/sources.list.d/pgdg.list

RUN apt-get update && apt-get install -y \
  build-essential \
  git \
  postgresql-client-16 \
  libsqlite3-dev \
  libvips42 \
  && rm -rf /var/lib/apt/lists/*

COPY package.json .
COPY package-lock.json .

RUN npm ci

COPY Gemfile .
COPY Gemfile.lock .

RUN bundle install --jobs $(nproc)

COPY . .

RUN APP_HOST=example.test bin/rails js:routes:typescript
RUN npm run build
RUN APP_HOST=example.test NODE_ENV=production RAILS_ENV=production SECRET_KEY_BASE=jopa bin/rails assets:precompile

ENV DOCKER_CHANNEL stable
ENV DOCKER_VERSION 20.10.21
ENV DISABLE_SPRING 1

RUN curl -fsSL "https://download.docker.com/linux/static/${DOCKER_CHANNEL}/x86_64/docker-${DOCKER_VERSION}.tgz" \
  | tar -xzC /usr/local/bin --strip=1 docker/docker

CMD ["make", "start-production"]
