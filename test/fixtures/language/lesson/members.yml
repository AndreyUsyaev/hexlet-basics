# == Schema Information
#
# Table name: language_lesson_members
#
#  id                 :bigint           not null, primary key
#  messages_count     :integer          default(0)
#  state              :string
#  created_at         :datetime         not null
#  updated_at         :datetime         not null
#  language_id        :bigint           not null
#  language_member_id :integer          not null
#  lesson_id          :bigint           not null
#  openai_thread_id   :string
#  user_id            :bigint           not null
#
# Indexes
#
#  index_language_lesson_members_on_language_member_id            (language_member_id)
#  user_finished_lessons_language_module_lesson_id_index          (lesson_id)
#  user_finished_lessons_user_id_index                            (user_id)
#  user_finished_lessons_user_id_language_module_lesson_id_index  (user_id,lesson_id) UNIQUE
#
# Foreign Keys
#
#  fk_rails_...  (language_member_id => language_members.id)
#  fk_rails_...  (lesson_id => language_lessons.id)
#  fk_rails_...  (user_id => users.id)
#
one:
  user: one
  language: php
  lesson: one
  language_member: one

tags_one:
  user: one
  language: php
  lesson: tags_one
  state: finished
  language_member: one

naming_variables_one:
  user: one
  language: php
  lesson: naming_variables_one
  state: finished
  language_member: one

full-one:
  user: full
  language: php
  lesson: one
  language_member: full_php
  state: finished

full-tags_one:
  user: full
  language: php
  lesson: tags_one
  state: finished
  language_member: full_php

full-naming_variables_one:
  user: full
  language: php
  lesson: naming_variables_one
  language_member: full_php


full-elixir-hello-world:
  user: full
  language: elixir
  lesson: elixir-hello-world
  state: finished
  language_member: full_elixir

full-elixir-variables:
  user: full
  language: elixir
  lesson: elixir-variables
  state: finished
  language_member: full_elixir

# full-elixir-strings:
#   user: full
#   language: elixir
#   lesson: elixir-strings
#   state: finished
#   language_member: full_elixir

full-typescript-lesson1:
  user: full
  language: typescript
  lesson: typescript-module1-lesson1
  state: finished
  language_member: full_typescript

full-typescript-lesson2:
  user: full
  language: typescript
  lesson: typescript-module1-lesson2
  state: started
  language_member: full_typescript
