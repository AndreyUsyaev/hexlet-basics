upstream hexlet_basics_backend {
  server localhost:3000;
}

proxy_cache_path /var/cache/nginx/s3_sitemap/ levels=1:2 keys_zone=s3_sitemap_cache:10m max_size=100m inactive=1d use_temp_path=off;

server {
  listen      8080;
  listen      [::]:8080;

  server_name "";
  return      200;
}

server {
  listen      8080;
  listen      [::]:8080;

  server_name "~^www\.(.*)$";
  return      301 https://$1$request_uri;
}

server {
  listen         8080;
  listen         [::]:8080;

  server_name    code-basics.ru;
  rewrite ^ https://ru.code-basics.com$request_uri permanent;
}

server {
  listen      8080;
  listen      [::]:8080;

  server_name code-basics.com ru.code-basics.com;

  client_max_body_size 10M;
  keepalive_timeout   620s;
  charset UTF-8;

  root /var/www/hexlet-basics/shared/public;
  error_page 404 /404.html;
  error_page 500 /500.html;

  # include /etc/nginx/gzip.conf;

#   auth_basic "Restricted Content";
#   auth_basic_user_file /etc/nginx/.htpasswd;

  rewrite ^\/languages\/(?<language_slug>.+)\/modules\/(?<module_slug>.+)\/lessons\/(?<lesson_slug>.+) /languages/$language_slug/lessons/$lesson_slug permanent;

  # location ^~ /assets/ {
  #   gzip_static on;
  #   expires max;
  #   add_header Cache-Control public;
  # }

  # location ^~ /assets/ {
  #   gzip_static on;
  #
  #   # NOTE: add text/css to default list for set utf-8 in css
  #   charset_types text/css text/xml text/plain text/vnd.wap.wml application/javascript application/rss+xml;
  #   expires 1y;
  #   add_header Cache-Control public;
  #   add_header Access-Control-Allow-Origin *;
  #
  #   try_files $uri =404;
  #   error_page 404 /404.html;
  # }
  #
  # location ~ ^/(assets)/ {
  #   expires 1y;
  #   add_header Cache-Control public;
  #
  #   try_files $uri =404;
  #   error_page 404 /404.html;
  # }

  location ~ ^/(assets|packs)/ {
    expires max;

    # NOTE: add text/css to default list for set utf-8 in css
    charset_types text/css text/xml text/plain text/vnd.wap.wml application/javascript application/rss+xml;

    add_header Cache-Control public;

    add_header 'Access-Control-Allow-Origin' $http_origin;

    proxy_redirect off;
    proxy_pass_header Cookie;
    proxy_ignore_headers Set-Cookie;
    proxy_hide_header Set-Cookie;

    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto 'https';
    proxy_set_header X-Real-IP $remote_addr;
    real_ip_header   X-Forwarded-For;
    real_ip_recursive on;

    proxy_pass http://hexlet_basics_backend;
  }

  set $s3_sitemap_bucket "${DO_SPACES_SITEMAP_BUCKET}.${DO_SPACES_REGION}.digitaloceanspaces.com";
  location /sitemaps/ {
    sendfile on;
    resolver 8.8.8.8;
    proxy_http_version 1.1;
    proxy_redirect off;
    proxy_set_header Connection "";
    proxy_set_header Authorization '';
    proxy_set_header Host $s3_sitemap_bucket;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # avoid passing along amazon headers
    # http://docs.aws.amazon.com/AmazonS3/latest/API/RESTCommonResponseHeaders.html
    proxy_hide_header x-amz-id-2;
    proxy_hide_header x-amz-request-id;
    proxy_hide_header x-amz-meta-server-side-encryption;
    proxy_hide_header x-amz-server-side-encryption;
    # cookies are useless on these static, public resources
    proxy_hide_header Set-Cookie;
    proxy_ignore_headers Set-Cookie;

    # heavily cache results locally
    proxy_cache s3_sitemap_cache;
    proxy_cache_valid 24h;
    proxy_cache_revalidate off;
    proxy_cache_key $scheme$proxy_host$uri;
    proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
    proxy_cache_lock on;
    # s3 replies with 403 if an object is inaccessible; essentially not found
    proxy_intercept_errors on;
    error_page 403 =404 /404.html;

    # go get it from s3
    proxy_pass https://$s3_sitemap_bucket;
    # annotate response about when it was originally retrieved
    add_header X-Cache-Status $upstream_cache_status;

    expires 1d;
    add_header Cache-Control public;
    proxy_ignore_headers Cache-Control;
  }

  try_files $uri @app;

  location @app {
    # help with SEO
    rewrite ^/(.*)/$ /$1 permanent;

    # TODO What is this for?
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
      add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
      add_header 'Access-Control-Max-Age' 600;
      add_header 'Content-Type' 'text/plain; charset=utf-8';
      add_header 'Content-Length' 0;
      return 204;
    }

    if ($request_method = 'GET') {
      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
      add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
      add_header 'Access-Control-Max-Age' 600;
    }

    proxy_http_version  1.1;
    proxy_cache_bypass  $http_upgrade;

    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Connection        "upgrade";
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto 'https';
    proxy_set_header X-Forwarded-Host  $host;
    proxy_set_header X-Forwarded-Port  $server_port;

    # > cloudflare options
    real_ip_header   X-Forwarded-For;
    real_ip_recursive on;
    port_in_redirect off;
    # <

    proxy_redirect off;
    proxy_buffers 16 32k;

    proxy_pass http://hexlet_basics_backend;
  }

}
