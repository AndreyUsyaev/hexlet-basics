
upstream code_basics_backend {
  server localhost:3000;
}

# first server block in config is used by default for requests with unknown server_name
# It is used by kubernetes for health checking nginx container
server {
  listen 8080;
  listen [::]:8080;

  return 200;
}

# üéØ Redirects (www, ru subdomains)
server {
  listen 8080;
  listen [::]:8080;

  server_name ~^www\.(.*)$ ru.code-basics.com code-basics.ru;
  return 301 https://code-basics.com/ru$request_uri;
}

# üåê Main server block
server {
  listen 8080;
  listen [::]:8080;

  server_name code-basics.com;
  root /var/www/code-basics/shared/public;
  charset UTF-8;

  client_max_body_size 10M;
  keepalive_timeout 620s;

  # üßº General rewrites
  # rewrite ^/languages/(?<language_slug>.+)/modules/(?<module_slug>.+)/lessons/(?<lesson_slug>.+) /languages/$language_slug/lessons/$lesson_slug permanent;
  rewrite ^(.*)\.amp$ $1 permanent;

  # üì¶ Static assets
  location ~ ^/vite/assets/ {
    expires 1y;
    add_header Cache-Control public;
    add_header Last-Modified "";
    add_header ETag "";

    sendfile on;
    tcp_nopush on;
    sendfile_max_chunk 1m;
    access_log off;

    gzip_static on;

    try_files $uri =404;
  }

  # Serve ActiveStorage representations with cache
  location ~ ^/rails/active_storage/representations/(redirect|proxy)/ {
    expires 1y;
    add_header Cache-Control "public, max-age=31536000";
    include snippets/cors.conf;
    proxy_pass http://code_basics_backend;
  }

  # üéØ App fallback
  try_files $uri @app;

  # üîÅ Proxy to Rails
  location @app {
    rewrite ^/(.*)/$ /$1 permanent;

    gzip on;

    # CORS preflight
    if ($request_method = 'OPTIONS') {
      include snippets/cors.conf;
      add_header Content-Type 'text/plain; charset=utf-8';
      add_header Content-Length 0;
      return 204;
    }

    if ($request_method = 'GET') {
      include snippets/cors.conf;
      add_header Permissions-Policy 'browsing-topics=()';
    }

    # –î–æ–±–∞–≤–ª—è–µ–º –¥–ª—è —è–Ω–¥–µ–∫—Å –≤–µ–±–º–∞—Å—Ç–µ—Ä–∞ / –∫–∞—Ä—Ç—ã –∫–ª–∏–∫–æ–≤
    proxy_hide_header X-Frame-Options;
    set $frame_options 'SAMEORIGIN';
    if ($http_referer ~ '^https?:\/\/([^\/]+\.)?(code-basics\.com|webvisor\.com|metri[ck]a\.yandex\.(com|ru|by|com\.tr))\/'){
      set $frame_options '';
    }
    add_header X-Frame-Options $frame_options always;

    proxy_http_version 1.1;
    proxy_cache_bypass $http_upgrade;

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto 'https';
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;

    real_ip_header X-Forwarded-For;
    real_ip_recursive on;
    port_in_redirect off;

    proxy_redirect off;
    proxy_buffers 16 64k;
    proxy_busy_buffers_size 128k;
    proxy_buffer_size 64k;
    proxy_temp_file_write_size 128k;

    proxy_connect_timeout 5s;
    proxy_read_timeout 30s;
    proxy_send_timeout 30s;

    proxy_pass http://code_basics_backend;
  }

  # Security headers
  add_header X-Content-Type-Options nosniff;
  add_header X-Frame-Options SAMEORIGIN;
  add_header X-XSS-Protection "1; mode=block";
  add_header Referrer-Policy no-referrer-when-downgrade;

  # üå¨Ô∏è Enable Gzip globally
  gzip_static on;
  gzip_proxied any;
  gzip_disable "msie6";
  gzip_types
    text/plain text/css application/json application/javascript
    text/xml application/xml application/xml+rss text/javascript
    application/vnd.ms-fontobject application/x-font-ttf font/opentype
    image/svg+xml image/x-icon;
}

# server {
#   listen      8080;
#   listen      [::]:8080;
#
#   server_name "";
#   return      200;
# }
#
# server {
#   listen      8080;
#   listen      [::]:8080;
#
#   server_name "~^www\.(.*)$";
#   return      301 https://$1$request_uri;
# }
#
# server {
#   listen         8080;
#   listen         [::]:8080;
#
#   server_name    code-basics.ru;
#   return 301 https://code-basics.com/ru$request_uri;
# }
#
# server {
#   listen         8080;
#   listen         [::]:8080;
#
#   server_name    ru.code-basics.com;
#
#   return 301 https://code-basics.com/ru$request_uri;
# }
#
# server {
#   listen      8080;
#   listen      [::]:8080;
#
#   server_name code-basics.com;
#
#   # log_not_found on;
#   # log_subrequest on;
#   # rewrite_log on;
#
#   client_max_body_size 10M;
#   keepalive_timeout   620s;
#   charset UTF-8;
#
#   root /var/www/code-basics/shared/public;
#
#   # error_page 404 /404.html;
#   # error_page 500 /500.html;
#
#   # Redirect old routes
#   rewrite ^\/languages\/(?<language_slug>.+)\/modules\/(?<module_slug>.+)\/lessons\/(?<lesson_slug>.+) /languages/$language_slug/lessons/$lesson_slug permanent;
#
#   # AMP redirect
#   rewrite ^(.*)\.amp$ $1 permanent;
#
#   location ~ ^/vite/assets/ {
#     expires 1y;
#     add_header Cache-Control public;
#     add_header Last-Modified "";
#     add_header ETag "";
#
#     # https://docs.nginx.com/nginx/admin-guide/web-server/serving-static-content/#enabling-sendfile
#     sendfile on;
#     tcp_nopush on;
#     sendfile_max_chunk 1m;
#     access_log off;
#
#     gzip_static on;
#     gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;
#
#     try_files $uri =404;
#
#     # NOTE: add text/css to default list for set utf-8 in css
#     # charset_types text/css text/xml text/plain text/vnd.wap.wml application/javascript application/rss+xml;
#   }
#
#   try_files $uri @app;
#
#   location @app {
#     # help with SEO
#     rewrite ^/(.*)/$ /$1 permanent;
#
#     gzip on;
#
#     # TODO What is this for?
#     if ($request_method = 'OPTIONS') {
#       add_header 'Access-Control-Allow-Origin' '*';
#       add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
#       add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
#       add_header 'Access-Control-Max-Age' 600;
#       add_header 'Content-Type' 'text/plain; charset=utf-8';
#       add_header 'Content-Length' 0;
#       return 204;
#     }
#
#     if ($request_method = 'GET') {
#       add_header 'Access-Control-Allow-Origin' '*' always;
#       add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
#       add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Permissions-Policy' always;
#       add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
#       add_header 'Access-Control-Max-Age' 600;
#       add_header 'Permissions-Policy' 'browsing-topics=()' always;
#     }
#
#     proxy_http_version  1.1;
#     proxy_cache_bypass  $http_upgrade;
#
#     proxy_set_header Upgrade           $http_upgrade;
#     proxy_set_header Connection        "upgrade";
#     proxy_set_header Host              $host;
#     proxy_set_header X-Real-IP         $remote_addr;
#     proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
#     proxy_set_header X-Forwarded-Proto 'https';
#     proxy_set_header X-Forwarded-Host  $host;
#     proxy_set_header X-Forwarded-Port  $server_port;
#
#     # > cloudflare options
#     real_ip_header   X-Forwarded-For;
#     real_ip_recursive on;
#     port_in_redirect off;
#     # <
#
#     proxy_redirect off;
#     proxy_buffers 16 32k;
#
#     proxy_pass http://code_basics_backend;
#   }
#
# }
